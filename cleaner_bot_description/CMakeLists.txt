cmake_minimum_required(VERSION 3.8)
project(cleaner_bot_description)

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# find dependencies
find_package(ament_cmake REQUIRED)
find_package(ros_gz_sim REQUIRED)
find_package(ros_gz_bridge REQUIRED)
find_package(robot_state_publisher REQUIRED)
find_package(controller_manager REQUIRED)
find_package(xacro REQUIRED)
find_package(gz_ros2_control REQUIRED)
find_package(PCL REQUIRED)
find_package(TinyXML2 REQUIRED)

if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  # the following line skips the linter which checks for copyrights
  # comment the line when a copyright and license is added to all source files
  set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # comment the line when this package is in a git repo and when
  # a copyright and license is added to all source files
  set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()

include_directories(include/cleaner_bot_description ${PCL_INCLUDE_DIRS})
add_definitions(${PCL_DEFINITIONS})

add_executable(broski src/boustrophedon_decomposition.cpp src/file_parser.cpp)

target_link_libraries(broski ${PCL_LIBRARIES} tinyxml2::tinyxml2)

install(
  TARGETS broski
  DESTINATION lib/${PROJECT_NAME}
)

install(
  DIRECTORY launch world models
  DESTINATION share/${PROJECT_NAME}
)

ament_package()
